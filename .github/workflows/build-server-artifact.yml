on:
  workflow_call:
    inputs:
      steamworks_sdk_tag:
        required: true
        type: string
      godot_tag:
        required: true
        type: string
    secrets:
      steamworks_sdk_repo:
        required: true
      steamworks_sdk_repo_token:
        required: true


jobs:
  build-server:
    runs-on: "ubuntu-latest"

    name: Server ${{ matrix.name }}

    env:
      SCONSFLAGS:

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Editor & Templates
            cache-name: server
            build-mono: false

          - name: Editor & Templates w/ Mono
            cache-name: server-mono
            build-mono: true

    steps:
      - uses: actions/checkout@v4

      # Download Godot to start
      - name: Download Godot
        uses: ./.github/actions/godot-download
        with:
          version: ${{ inputs.godot_tag }}

      # Download GodotSteam Server
      - name: Download GodotSteam Server
        uses: ./.github/actions/godotsteam-download

      # Download Steamworks SDK
      - name: Download Steamworks SDK
        uses: ./.github/actions/steamworks-download
        with:
          path: "steamworks"
          repository: ${{ secrets.steamworks_sdk_repo }}
          token: ${{ secrets.steamworks_sdk_repo_token }}
          ref: ${{ inputs.steamworks_sdk_tag }}

      - name: Move .so For Mono
        shell: bash
        run: |
          mkdir ./bin/
          cp ./modules/godotsteam_server/sdk/redistributable_bin/linux64/libsteam_api.so ./bin/
          ls ./bin/

      # Setting up the Linux toolchain for older versions
      - name: Setup Linux Toolchain (x86_64)
        uses: ./.github/actions/godot-linux-toolchain
        with:
          toolchain-name: "x86_64-godot-linux-gnu_sdk-buildroot"

      - name: Setup Linux Toolchain (i686)
        uses: ./.github/actions/godot-linux-toolchain
        with:
          toolchain-name: "i686-godot-linux-gnu_sdk-buildroot"

      # Get that cache set up
      - name: Setup Godot build cache
        uses: ./.github/actions/godot-cache
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      # Setup Python and Scons
      - name: Setup Python and Scons
        uses: ./.github/actions/godot-deps

      # Setup Linux dependencies (look how that lines up)
      - name: Linux dependencies
        shell: bash
        run: |
          sudo apt-get install xvfb libc6-dev

     # Setup Mono
      - name: Setup Mono (x86_64)
        if: ${{ matrix.build-mono }}
        uses: ./.github/actions/godot-mono
        with:
          mono-build-repo: ${{ env.GODOT_MONO_LINUX_BUILD_REPO }}
          mono-build-tag: ${{ env.GODOT_MONO_LINUX_BUILD_TAG }}
          mono-release: "linux-x86_64"
          mono-bcl: "bcl-desktop"

      - name: Setup Mono (x86)
        if: ${{ matrix.build-mono }}
        uses: ./.github/actions/godot-mono
        with:
          mono-build-repo: ${{ env.GODOT_MONO_LINUX_BUILD_REPO }}
          mono-build-tag: ${{ env.GODOT_MONO_LINUX_BUILD_TAG }}
          mono-release: "linux-x86"

      - name: Mono precompilation
        if: ${{ matrix.build-mono }}
        uses: ./.github/actions/godot-build
        with:
          buildroot: "${{ github.workspace }}/x86_64-godot-linux-gnu_sdk-buildroot/bin"
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} module_mono_enabled=yes mono_glue=no mono_bcl=$HOME/mono-bcls/desktop-bcl/net_4_x mono_prefix=$HOME/mono-installs/desktop-linux-x86_64-release
          platform: linuxbsd
          tools: true

      # Generate Mono glue
      - name: Generate Mono glue code
        if: ${{ matrix.build-mono }}
        run: |
          DRI_PRIME=0 xvfb-run "./bin/godot.x11.tools.64.mono" --generate-mono-glue modules/mono/glue || true

      - name: Set Mono scons flags
        if: ${{ matrix.build-mono }}
        run: |
          echo "MONO_SCONSFLAGS=module_mono_enabled=yes mono_glue=yes copy_mono_root=yes mono_bcl=$HOME/mono-bcls/desktop-bcl/net_4_x" >> $GITHUB_ENV

      - name: Clear bin
        run: |
          rm -rf bin

      # Compiling editors
      - name: Editor compilation (bits=64)
        uses: ./.github/actions/godot-build
        with:
          buildroot: "${{ github.workspace }}/x86_64-godot-linux-gnu_sdk-buildroot/bin"
          sconsflags: ${{ env.SCONSFLAGS }} ${{ env.MONO_SCONSFLAGS }} ${{ matrix.sconsflags }} bits=64 ${{ matrix.build-mono && 'mono_prefix=$HOME/mono-installs/desktop-linux-x86_64-release' || '' }}
          platform: server
          target: release_debug
          tools: true

      - name: Upload Editor (bits=64)
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}-editor-64

      - name: Clear bin
        run: |
          rm -rf bin

      - name: Editor compilation (bits=32)
        uses: ./.github/actions/godot-build
        with:
          buildroot: "${{ github.workspace }}/i686-godot-linux-gnu_sdk-buildroot/bin"
          sconsflags: ${{ env.SCONSFLAGS }} ${{ env.MONO_SCONSFLAGS }} ${{ matrix.sconsflags }} bits=32 ${{ matrix.build-mono && 'mono_prefix=$HOME/mono-installs/desktop-linux-x86-release' || '' }}
          platform: server
          target: release_debug
          tools: true

      - name: Upload Editor (bits=32)
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}-editor-32

      - name: Clear bin
        run: |
          rm -rf bin

      # Compiling templates
      - name: Debug Template compilation (tools=false, bits=64, target=release_debug)
        uses: ./.github/actions/godot-build
        with:
          buildroot: "${{ github.workspace }}/x86_64-godot-linux-gnu_sdk-buildroot/bin"
          sconsflags: ${{ env.SCONSFLAGS }} ${{ env.MONO_SCONSFLAGS }} ${{ matrix.sconsflags }} bits=64 ${{ matrix.build-mono && 'mono_prefix=$HOME/mono-installs/desktop-linux-x86_64-release' || '' }}
          platform: server
          target: release_debug
          tools: false

      - name: Release template compilation (tools=false, bits=64, target=release)
        uses: ./.github/actions/godot-build
        with:
          buildroot: "${{ github.workspace }}/x86_64-godot-linux-gnu_sdk-buildroot/bin"
          sconsflags: ${{ env.SCONSFLAGS }} ${{ env.MONO_SCONSFLAGS }} ${{ matrix.sconsflags }} bits=64 ${{ matrix.build-mono && 'mono_prefix=$HOME/mono-installs/desktop-linux-x86_64-release' || '' }} debug_symbols=no
          platform: server
          target: release
          tools: false

      - name: Upload Templates (bits=64)
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}-templates-64

      - name: Clear bin
        run: |
          rm -rf bin

      - name: Debug Template compilation (tools=false, bits=32, target=release_debug)
        uses: ./.github/actions/godot-build
        with:
          buildroot: "${{ github.workspace }}/i686-godot-linux-gnu_sdk-buildroot/bin"
          sconsflags: ${{ env.SCONSFLAGS }} ${{ env.MONO_SCONSFLAGS }} ${{ matrix.sconsflags }} bits=32 ${{ matrix.build-mono && 'mono_prefix=$HOME/mono-installs/desktop-linux-x86-release' || '' }}
          platform: server
          target: release_debug
          tools: false

      - name: Release template compilation (tools=false, bits=32, target=release)
        uses: ./.github/actions/godot-build
        with:
          buildroot: "${{ github.workspace }}/i686-godot-linux-gnu_sdk-buildroot/bin"
          sconsflags: ${{ env.SCONSFLAGS }} ${{ env.MONO_SCONSFLAGS }} ${{ matrix.sconsflags }} bits=32 ${{ matrix.build-mono && 'mono_prefix=$HOME/mono-installs/desktop-linux-x86-release' || '' }} debug_symbols=no
          platform: server
          target: release
          tools: false

      - name: Upload Templates (bits=32)
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}-templates-32

      - name: Clear bin
        run: |
          rm -rf bin