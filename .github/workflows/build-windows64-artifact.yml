on:
  workflow_call:
    inputs:
      steamworks_sdk_tag:
        required: true
        type: string
      godot_tag:
        required: true
        type: string
    secrets:
      steamworks_sdk_repo:
        required: true
      steamworks_sdk_repo_token:
        required: true


jobs:
  build-windows64:
    runs-on: "windows-latest"
    name: Windows 64 ${{ matrix.name }}
    env:
      SCONSFLAGS:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Editor & Templates
            cache-name: windows-64
            artifact-name: windows
            build-mono: false

          - name: Editor & Templates w/ Mono
            cache-name: windows-64-mono
            artifact-name: windows-mono
            build-mono: true

    steps:
      - uses: actions/checkout@v4

      # Download Godot to start
      - name: Download Godot
        uses: ./.github/actions/godot-download
        with:
          version: ${{ inputs.godot_tag }}

     # Download GodotSteam Server
      - name: Download GodotSteam Server
        uses: ./.github/actions/godotsteam-download

      # Download Steamworks SDK
      - name: Download Steamworks SDK
        uses: ./.github/actions/steamworks-download
        with:
          path: "steamworks"
          repository: ${{ secrets.steamworks_sdk_repo }}
          token: ${{ secrets.steamworks_sdk_repo_token }}
          ref: ${{ inputs.steamworks_sdk_tag }}

      # Get that cache set up
      - name: Setup Godot build cache
        uses: ./.github/actions/godot-cache
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      # Setup Python and Scons
      - name: Setup Python and Scons
        uses: ./.github/actions/godot-deps

      # Setup Mono
      # Assume Mono is already installed on the runner
      - name: Setup Mono (x86_64)
        if: ${{ matrix.build-mono }}
        uses: ./.github/actions/godot-windows-mono
        with:
          mono-bcl: "bcl-desktop-win32"
          mono-release: "windows-x86_64"

      - name: Mono precompilation
        if: ${{ matrix.build-mono }}
        uses: ./.github/actions/godot-windows-build
        with:
          sconsflags: mono_static=yes module_mono_enabled=yes mono_glue=no
          platform: windows
          tools: true

      # Generate Mono glue
      - name: Generate Mono glue code
        if: ${{ matrix.build-mono }}
        run: |
          DRI_PRIME=0 xvfb-run "./bin/godot.x11.tools.64.mono" --generate-mono-glue modules/mono/glue || true

      - name: Set Mono scons flags
        if: ${{ matrix.build-mono }}
        run: |
          echo "MONO_SCONSFLAGS=module_mono_enabled=yes mono_glue=yes copy_mono_root=yes mono_bcl=$HOME/mono-bcls/desktop-win32-bcl/net_4_x-win32 mono_static=yes" >> $GITHUB_ENV

      - name: Clear bin
        run: |
          rm -rf bin

      # Compiling editors
      - name: Compilation (bits=64)
        uses: ./.github/actions/godot-windows-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ env.MONO_SCONSFLAGS }} ${{ matrix.sconsflags }} bits=64 ${{ matrix.build-mono && 'mono_prefix=$HOME/mono-installs/desktop-windows-x86_64-release' || '' }}
          platform: windows
          target: release_debug
          tools: true

      - name: Upload Editor (bits=64)
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.artifact-name }}-editor-64

      - name: Clear bin
        run: |
          rm -rf bin

      # Compiling templates
      - name: Debug Template compilation (tools=false, bits=64, target=release_debug)
        uses: ./.github/actions/godot-windows-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ env.MONO_SCONSFLAGS }} ${{ matrix.sconsflags }} bits=64 ${{ matrix.build-mono && 'mono_prefix=$HOME/mono-installs/desktop-windows-x86_64-release' || '' }}
          platform: windows
          target: release_debug
          tools: false

      - name: Release Template compilation (tools=false, bits=64, target=release)
        uses: ./.github/actions/godot-windows-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ env.MONO_SCONSFLAGS }} ${{ matrix.sconsflags }} bits=64 ${{ matrix.build-mono && 'mono_prefix=$HOME/mono-installs/desktop-windows-x86_64-release' || '' }} debug_symbols=no
          platform: windows
          target: release
          tools: false

      - name: Upload Templates (bits=64)
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.artifact-name }}-templates-64

      - name: Clear bin
        run: |
          rm -rf bin